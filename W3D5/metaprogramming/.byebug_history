c
self
c
self
model_class
options_build
options
exit
exot
c
hmo
self.class
self
hmo
self
options
exit
c
exit
options
c
exit
c
exit
options
hmo
exit
Cat.where({owner_id: 3})
Cat.all
ret
exit
c
exit
exot
c
hmo.model_class.where({id: self.id}).first
hmo.model_class
hmo
exit
hmo
c
exit
hmo.model_class.where ({id: self.id})
hmo.model_class
hmo.class_name.model_class
hmo.class_name.singularize
hmo.class_name
hmo.class_name.singularize
hmo
options_build
self
Cat.where({id: 3})
Cat.where {id: 3}
Cat
options_build
options
exit
options
self_class_name
name
list 35
list 38
options
@foreign_key
options
c
exit
exot
hmo.class_name
hmo
self.attributes
options_build
exit
options[:foreign_key]
options
exit
hmo
options_build
options
l 65
l
options_build
self.class.where options_build
self.class.where
self.class
self
c
options[:foreign_key]
options
exit
HasManyOptions.new(name, options)
HasManyOptions(name, options)
options
l 65
hmo
options_build
exit
model_class
hmo
exit
HasManyOptions.new(name, options)
options
name
exit
c
exit
bto.foreign_key
self.attributes[:owner_id]
exit
bto
c
exit
self.attributes[bto.foreign_key]
self.attributes[bto.primary_key]
self.attributes
exit
bto
self
model_class
foreign_key
exit
exot
model_class.to_s.constantize.columns
model_class.to_s.constantize
model_class.to_s.constantize.attributes
model_class.to_s.constantize.primary_key
model_class.primary_key
model_class
foreign_key
exit
model_class.to_s.constantize.where({id: self.attributes[:id]})
model_class.to_s.constantize.where({id: self.attributes[:id], owner_id: self.attributes[:owner_id]})
model_class.to_s.constantize.where({id: self.attributes[:id], foreign_key: self.attributes[:owner_id]})
model_class.to_s.constantize.where({primary_key: self.attributes[:id], foreign_key: self.attributes[:owner_id]})
model_class.to_s.constantize.where {primary_key: self.attributes[:id], foreign_key: self.attributes[:owner_id]}
self.id
self
model_class.to_s.constantize.where {primary_key: self.attributes[:id], foreign_key: self.attributes[:foreign_key]}
self
model_class
bto
model_class.to_s.constantize.where {primary_key: :id, foreign_key: :owner_id}
bto
foreign_key
list 54
model_class.to_s.constantize.where 
model_class.to_s.constantize.where self.attributes
model_class.to_s.constantize.where
model_class.to_s.constantize
model_class
self.class.where
self.class
model_class.to_s.constantize
model_class.to_s.constantize.class
model_class.to_s.constantize.where
model_class.to_s.constantize
model_class.constantize
model_class
exit
self.class.where self.attributes
self.class.where
self.class
self
self.where
self.where self.attributes
exit
self.where self.attributes
self
model_class.to_s.constantize.where self.attributes
model_class.to_s.constantize.where
model_class.to_s.constantize
model_class
model_class.to_s.constantize
model_class.constantize
self
bto
exit
bto
exit
@options
options
exit
options
name
exit
self
self.class.superclass.superclass
self.class.superclass
self.class
exit
self.class_name
self
c
exit
self_class_name
name
c
options
name
@foreign_key
exit
options
exit
continue
exo
@foreign_key
@class_name
@primary_key
exit
name.capitalize
name
@class_name
c
exit
fg
name
@foreign_key
exit
name.constantize
name.underscore
name.singularize
name.camelcase
name.constantize
name
exit
n
display e
c
s
display e
exit
options
name
exit
return self.parse_all res
self.parse_all res
c
insert
c
exit
insert
c
exit
params
@attributes
self
self.attribute_values
self.attributes
self
c
@attributes[:id]
@attributes
c
exit
exi
self.table_name
